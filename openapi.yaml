openapi: "3.1.3"
info:
  title: Football Video API
  version: "1.0.0"
  description: API for fetching football videos by categories and date ranges.
servers:
  - url: https://streamd-a2v8.onrender.com/api

paths:
  /videos:
    get:
      summary: Get all videos
      parameters:
        - in: query
          name: page
          schema: { type: integer, default: 1, minimum: 1 }
        - in: query
          name: pageSize
          schema: { type: integer, default: 10, minimum: 1 }
        - in: query
          name: sort
          schema: { type: string, enum: [ASC, DESC], default: DESC }
      responses:
        "200":
          description: List of all videos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedVideos"
              examples:
                success:
                  value:
                    data:
                      - id: 101
                        title: "Arsenal vs Chelsea — Highlights"
                        thumbnail: "https://cdn.example.com/t/101.jpg"
                        category: "Highlights"
                        match_date: "2025-02-01T19:45:00Z"
                      - id: 102
                        title: "Liverpool vs City — Goals"
                        thumbnail: null
                        category: "Goals"
                        match_date: "2025-02-01T16:30:00Z"
                    meta:
                      total_items: 200
                      page: 1
                      pageSize: 10
                      total_pages: 20
                      has_previous: false
                      has_next: true
                      previous_page: null
                      next_page: 2
        "400":
          description: Invalid query params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid 'page' parameter. Must be a positive integer."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected database error."

  /videos/category/{categoryName}:
    get:
      summary: Get videos by category
      parameters:
        - in: path
          name: categoryName
          required: true
          schema: { type: string }
        - in: query
          name: page
          schema: { type: integer, default: 1, minimum: 1 }
        - in: query
          name: pageSize
          schema: { type: integer, default: 10, minimum: 1 }
        - in: query
          name: sort
          schema: { type: string, enum: [ASC, DESC], default: DESC }
      responses:
        "200":
          description: List of videos in a category (200 with empty list if category has no items)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedVideos"
              examples:
                success:
                  value:
                    data:
                      - id: 77
                        title: "Barcelona vs Real — Highlights"
                        thumbnail: "https://cdn.example.com/t/77.jpg"
                        category: "Highlights"
                        match_date: "2025-01-20T20:00:00Z"
                    meta:
                      total_items: 1
                      page: 1
                      pageSize: 10
                      total_pages: 1
                      has_previous: false
                      has_next: false
                      previous_page: null
                      next_page: null
        "400":
          description: Invalid query params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid 'page' parameter. Must be a positive integer."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected database error."

  /videos/category/{categoryName}/date/{filter}:
    get:
      summary: Get videos by category and date filter
      deprecated: true
      parameters:
        - in: path
          name: categoryName
          required: true
          schema: { type: string }
        - in: path
          name: filter
          required: true
          schema: { type: string, enum: [yesterday, today, tomorrow] }
        - in: query
          name: tz
          description: IANA timezone (used to calculate the filter window)
          schema: { type: string, default: Africa/Lagos }
        - in: query
          name: page
          schema: { type: integer, default: 1, minimum: 1 }
        - in: query
          name: pageSize
          schema: { type: integer, default: 10, minimum: 1 }
        - in: query
          name: sort
          schema: { type: string, enum: [ASC, DESC], default: DESC }
      responses:
        "200":
          description: Videos in category with date filter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedVideos"
        "400":
          description: Invalid date filter or query params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Filter must be one of [yesterday, today, tomorrow]."

  /videos/category/{categoryName}/date:
    get:
      summary: Get videos by category and date range
      parameters:
        - in: path
          name: categoryName
          required: true
          schema: { type: string }
        - in: query
          name: from
          required: true
          schema: { type: string, format: date }
        - in: query
          name: to
          required: true
          schema: { type: string, format: date }
        - in: query
          name: page
          schema: { type: integer, default: 1, minimum: 1 }
        - in: query
          name: pageSize
          schema: { type: integer, default: 10, minimum: 1 }
        - in: query
          name: sort
          schema: { type: string, enum: [ASC, DESC], default: DESC }
      responses:
        "200":
          description: Videos in category between date range
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedVideos"
              examples:
                success:
                  value:
                    data:
                      - id: 55
                        title: "PSG vs Monaco — Highlights"
                        thumbnail: "https://cdn.example.com/t/55.jpg"
                        category: "Highlights"
                        match_date: "2025-01-15T21:00:00Z"
                    meta:
                      total_items: 4
                      page: 1
                      pageSize: 10
                      total_pages: 1
                      has_previous: false
                      has_next: false
                      previous_page: null
                      next_page: null
        "400":
          description: Invalid date range or query params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Missing 'from' or 'to' query params."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected database error."

  /videos/date:
    get:
      summary: Get videos by date range
      parameters:
        - in: query
          name: from
          required: true
          schema: { type: string, format: date }
        - in: query
          name: to
          required: true
          schema: { type: string, format: date }
        - in: query
          name: category
          schema: { type: string }
        - in: query
          name: page
          schema: { type: integer, default: 1, minimum: 1 }
        - in: query
          name: pageSize
          schema: { type: integer, default: 10, minimum: 1 }
        - in: query
          name: sort
          schema: { type: string, enum: [ASC, DESC], default: DESC }
      responses:
        "200":
          description: Videos within date range
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedVideos"
              examples:
                success:
                  value:
                    data:
                      - id: 88
                        title: "Napoli vs Inter — Goals"
                        thumbnail: null
                        category: "Goals"
                        match_date: "2025-02-02T18:00:00Z"
                    meta:
                      total_items: 12
                      page: 2
                      pageSize: 10
                      total_pages: 2
                      has_previous: true
                      has_next: false
                      previous_page: 1
                      next_page: null
        "400":
          description: Invalid date range
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Missing 'from' or 'to' query params."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected database error."

  /videos/{id}:
    get:
      summary: Get a video by ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, minimum: 1 }
      responses:
        "200":
          description: A single video
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Video"
              examples:
                success:
                  value:
                    data:
                      id: 101
                      title: "Arsenal vs Chelsea — Highlights"
                      thumbnail: "https://cdn.example.com/t/101.jpg"
                      category: "Highlights"
                      match_date: "2025-02-01T19:45:00Z"
        "400":
          description: Invalid video ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid 'id' parameter. Must be an integer."
        "404":
          description: Video not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Video not found"

  /categories:
    get:
      summary: Get all categories
      responses:
        "200":
          description: List of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Category"
              examples:
                success:
                  value:
                    data:
                      - id: 1
                        name: "Highlights"
                      - id: 2
                        name: "Goals"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected database error."

components:
  schemas:
    Video:
      type: object
      description: Lightweight video object returned by listing and detail endpoints.
      properties:
        id:
          type: integer
        title:
          type: string
        thumbnail:
          type: string
          nullable: true
        category:
          type: string
          description: Category name (joined from categories.name)
        match_date:
          type: string
          format: date-time
          description: Match kickoff datetime (from matches.date)
      required: [id, title, category, match_date]

    Category:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
      required: [id, name]

    PaginationMeta:
      type: object
      properties:
        total_items: { type: integer }
        page: { type: integer }
        pageSize: { type: integer }
        total_pages: { type: integer }
        has_previous: { type: boolean }
        has_next: { type: boolean }
        previous_page: { type: integer, nullable: true }
        next_page: { type: integer, nullable: true }
      required: [total_items, page, pageSize, total_pages, has_previous, has_next]

    PaginatedVideos:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Video"
        meta:
          $ref: "#/components/schemas/PaginationMeta"
      required: [data, meta]

    Error:
      type: object
      properties:
        error: { type: string }
      required: [error]
